language: python
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
install:
    # build miniworld container
    - export REPO=miniworldproject/miniworld_core
    - pushd ~/build/miniworld-project/miniworld_core
    - BRANCH=$TRAVIS_BRANCH ci/build_container.sh

    # clone miniworld_playground
    - git clone https://github.com/miniworld-project/miniworld_playground.git
    - pushd miniworld_playground
script:
    - uname -a
    # run tests
    - BRANCH=$TRAVIS_BRANCH docker-compose run --entrypoint flake8 core  # flake8
    - MW_CONFIG=tests/config.json BRANCH=$TRAVIS_BRANCH docker-compose up -d  # start docker environment
    - sleep 10
    - MW_CONFIG=tests/config.json BRANCH=$TRAVIS_BRANCH docker-compose logs
    - docker-compose exec core ./scripts/test_unit.sh
    - docker-compose exec core ./scripts/test_integration.sh
    - docker-compose exec core ./scripts/test_functional.sh
    - docker-compose exec core ./scripts/test_acceptance.sh -x -m "not examples"
after_failure:
    - docker-compose logs > docker-compose.txt
    - tail -n 500 docker-compose.txt
after_success:
    - docker-compose logs > docker-compose.txt
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`
    # push docker image
    - docker push $REPO:$TRAVIS_BRANCH
addons:
  artifacts:
    s3_region: "eu-west-1"
    paths:
    - docker-compose.txt
